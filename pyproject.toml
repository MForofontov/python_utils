[build-system]
requires = ["setuptools>=61"]
build-backend = "setuptools.build_meta"

[project]
name = "python_utils"
version = "0.1.0"
license = { file = "LICENSE" }
requires-python = ">=3.10"
dependencies = [
    "cramjam==2.11.0",
    "python-snappy==0.7.3",
    "zstandard==0.23.0",
    "psutil==7.0.0",
    "tqdm==4.67.1",
    "numpy==2.3.2",
    "aiohttp==3.12.15",
    "pytz==2024.2",
]

[project.optional-dependencies]
dev = [
    "pytest==8.4.1",
    "pytest-asyncio==1.1.0",
    "allure-pytest==2.15.0",
    "allure-python-commons==2.15.0",
    "mypy==1.17.1",
    "ruff",            # <â€” add ruff here
    "pylint==3.3.7",   # optional; keep if you sometimes run it
    "attrs==25.3.0",
    "exceptiongroup==1.3.0",
    "iniconfig==2.1.0",
    "packaging==25.0",
    "pluggy==1.6.0",
    "tomli==2.2.1",
]

[tool.setuptools.packages.find]
where = ["."]
exclude = ["pytest*"]

[tool.pytest.ini_options]
pythonpath = ["."]
testpaths = ["pytest/unit"]
# optional, if you use asyncio tests
# asyncio_mode = "auto"

[tool.ruff]
line-length = 88
target-version = "py310"  # match lowest supported Python
select = ["E", "F", "I", "UP", "B", "TID"]
ignore = [
  "E501",  # formatter handles long lines
]
extend-exclude = ["venv", ".venv", "dist", "build", ".mypy_cache", ".ruff_cache"]

[tool.ruff.lint.isort]
known-first-party = ["python_utils"]

[tool.ruff.format]
# Ruff is the formatter

[tool.mypy]
python_version = "3.10"               # match lowest supported
strict = true
explicit_package_bases = true
ignore_missing_imports = true         # relax until stubs are added
warn_unused_ignores = true
no_implicit_optional = true
pretty = true
cache_dir = ".mypy_cache"
